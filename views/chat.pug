extends ui_layout

block content
    .computer.only.tablet.only.row
        .five.wide.column
            .ui.segment(style='height:90vh;')
                #userList.ui.relaxed.divided.list
        .eleven.wide.column
            .ui.segment(style='height:90vh;')
                img.ui.left.floated.avatar.image(src=user.gravatar(60))
                h2.ui.left.floated.header Person
                .ui.clearing.divider
                p

                .messages.container(style="height: 70vh; overflow-x: hidden; overflow-y: auto;")
                    #messages.ui.grid
                        .row
                            .right.aligned.one.wide.column(style='padding:0!important')
                                img.ui.avatar.image(src=user.gravatar(60))
                            .seven.wide.column
                                .ui.mini.compact.message
                                    p
                                        span=user.profile.name || user.username || user.id
                                p(style='font-size:10px; margin-top:-8px')
                                    | 2:18 PM
               
                form#form(action='')
                    .ui.fluid.icon.input(style='position: absolute; bottom: 10px; left: 50%; transform: translate(-50%, -50%); width:450px;')
                        input#input(autocomplete="off" type='text' placeholder='Enter message')
                        button
                            i.paper.plane.icon

                script(src='/socket.io/socket.io.js')
                script.
                    var form = $('#form')[0]; 
                    var input = $('#input')[0]; 

                    const URL = "http://localhost:3000";
                    const socket = io(URL, { autoConnect: false });

                    socket.onAny((event, ...args) => {
                        console.log(event, args);
                    });

                    const sessionId = localStorage.getItem("sessionId");
                    if (sessionId) {
                        socket.auth = { sessionId, username:'test03', userId:'62054a5332b8e725ca40efd0'};
                        socket.connect();
                    }
                    else {
                        socket.auth = { username:'test03', userId:'62054a5332b8e725ca40efd0'};
                        socket.connect();
                    }

                    socket.on("session", ({ sessionId, userId }) => {
                        // attach the session ID to the next reconnection attempts
                        socket.auth = { sessionId };
                        // store it in the localStorage
                        localStorage.setItem("sessionId", sessionId);
                        // save the ID of the user
                        socket.userId = userId;
                    });

                    socket.on("connect_error", (err) => {
                        console.log(`connect_error due to ${err.message}`);
                    });

                    socket.on("userList", (userList) => {
                        userList.forEach((user) => {
                            user.self = user.userId === socket.id;
                        });
                        // put the current user first, and then sort by username
                        this.userList = userList.sort((a, b) => {
                            if (a.self) return -1;
                            if (b.self) return 1;
                            if (a.username < b.username) return -1;
                            return a.username > b.username ? 1 : 0;
                        });

                        userList.forEach((user) => {
                            var u = `   <div class="item"><img class="ui avatar image" src=""/>
                                            <div class="content">
                                                <div class="header">${user.username}</div>
                                            </div>
                                            <button class="ui icon right floated mini button"><i class="right arrow icon"></i></button>
                                        </div>`
                            $('#userList').append(u);
                        });
                    });

                    form.addEventListener('submit', function(e) {
                        e.preventDefault();
                        if (input.value) {
                            socket.emit('chatMessage', input.value);
                            input.value = '';
                        }
                    });

                    function addChatSentMessage(msg) {
                        console.log("sent msg: " + msg.msg);
                        var mes = ` <div class="row" style="padding-top:6px; padding-bottom:6px">
                                        <div class="right floated right aligned seven wide column">
                                        <div class="ui mini blue compact message">
                                            <p>${msg.msg}</p>
                                        </div>
                                        <p style="font-size:10px; margin-top:-8px">${msg.time}</p>
                                        </div>
                                    </div>`
                        $('#messages').append(mes);

                        $('#messages').scrollTop($('#messages')[0].scrollHeight);
                    }

                    function addChatReceivedMessage(msg) {
                        console.log("received msg: " + msg.msg);
                        var mes = ` <div class="row" style="padding-top:6px; padding-bottom:6px">
                                        <div class="right aligned one wide column" style="padding:0!important"><img class="ui avatar image" id="avatarImage"/></div>
                                        <div class="seven wide column">
                                        <div class="ui mini compact message">
                                            <p>${msg.msg}</p>
                                        </div>
                                        <p style="font-size:10px; margin-top:-8px">${msg.time}</p>
                                        </div>
                                    </div>`
                        $('#messages').append(mes);
                        //- $("#avatarImage").attr("src", user.gravatar(60));

                        $('#messages').scrollTop($('#messages')[0].scrollHeight);
                    }   

                    socket.on('message', function(msg) {
                    });

    .mobile.only.row
        .column
            .ui.segment
                .ui.relaxed.divided.list
                    .item
                        img.ui.avatar.image(src=user.gravatar(60))
                        .content
                            .header Person 1
                            |       ...
                        button.ui.icon.right.floated.mini.button
                            i.right.arrow.icon
                    .item
                        img.ui.avatar.image(src=user.gravatar(60))
                        .content
                            .header Person 2
                            |       ...
                        button.ui.icon.right.floated.mini.button
                            i.right.arrow.icon
                    .item
                        img.ui.avatar.image(src=user.gravatar(60))
                        .content
                            .header Person 3
                            |       ...
                        button.ui.icon.right.floated.mini.button
                            i.right.arrow.icon
    .mobile.only.row
        .column
            .ui.segment(style='height:90vh;')
                img.ui.left.floated.avatar.image(src=user.gravatar(60))
                h2.ui.left.floated.header Person
                .ui.clearing.divider
                p

                .ui.grid
                    .row
                        .eight.wide.column
                            .ui.mini.compact.message
                                p
                                    | Hello
                            p(style='font-size:10px; margin-top:-8px')
                                | 2:18 PM
                    .row
                        .right.floated.right.aligned.eight.wide.column
                            .ui.mini.blue.compact.message
                                p
                                    | Hi
                            p(style='font-size:10px; margin-top:-8px')
                                | 2:19 PM
                    .row
                        .eight.wide.column
                            .ui.mini.compact.message
                                p
                                    | long message long message long message long message long message long message
                            p(style='font-size:10px; margin-top:-8px')
                                | 2:19 PM
                    .row
                        .right.floated.right.aligned.eight.wide.column
                            .ui.mini.blue.compact.message
                                p
                                    | long message long message long message long message long message long message
                            p(style='font-size:10px; margin-top:-8px')
                                | 2:20 PM
                    
                .ui.fluid.icon.input(style='position: absolute; bottom: 10px; left: 50%; transform: translate(-50%, -50%); width:200px;')
                    input(type='text' placeholder='Enter message')
                    i.paper.plane.icon